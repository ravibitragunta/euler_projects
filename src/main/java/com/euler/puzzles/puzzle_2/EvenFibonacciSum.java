package com.euler.puzzles.puzzle_2;

import org.springframework.boot.CommandLineRunner;
import org.springframework.core.annotation.Order;
import org.springframework.stereotype.Component;

/*
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
 * By starting with 1 and 2, the first 10 terms will be: 
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ... 
 * By considering the terms in the Fibonacci sequence 
 * whose values do not exceed four million, 
 * find the sum of the even-valued terms.
 */
@Component
public class EvenFibonacciSum implements CommandLineRunner{

	@Override
	@Order(2)
	public void run(String... args) throws Exception {
		long f1 = 0; 
		long f2 = 1;
		long next = 0l;
		long fibonacciSum = 0l;
		while (next < 1000000l) {
			next = f1 + f2;
			f1 = f2;
			f2 = next;
			if (next %2 ==0)
				fibonacciSum += next;
				
		}
		
		System.out.println (fibonacciSum);
		
		
	}

}
